@using FahasaStoreClientApp.Components
@using FahasaStoreClientApp.Helpers
@using FahasaStoreClientApp.Models.CustomModels
@using FahasaStoreClientApp.Models.DTO
@inject IHttpContextAccessor HttpContextAccessor
@model BookDTO

@{
    var userLogin = new UserLogined(HttpContextAccessor);

    var vouchers = ViewData["Vouchers"] as List<VoucherDTO>;
    var similarBooks = ViewData["SimilarBooks"] as List<BookDTO>;

    var reviews = ViewData["Reviews"] as List<ReviewDTO>;

    var hasOrder = ViewData["HasOrder"] as bool?;

    var pageFindSimilarBooksBasedOnCart = ViewData["pageFindSimilarBooksBasedOnCart"] as PaginatedResponse<BookDTO>;
}

<div id="InfomationProduct" class="bg-black bg-opacity-10">
    @* breadcrumb - view product *@
    <div class="container">
        <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb" class="pt-2">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Product</li>
            </ol>
        </nav>
        <div class="bg-white rounded-3 p-3">
            <div class="row flex-column flex-lg-row align-items-center align-items-lg-start">
                <div class="col-5">
                    <div class="swiper mySwiper2-product-view">
                        <div class="swiper-wrapper">
                            @{
                                if (Model.PosterImages != null && Model.PosterImages.Count > 0)
                                {
                                    foreach (var poster in Model.PosterImages)
                                    {
                                        <div class="swiper-slide">
                                            <div class="w-100 position-relative" style="padding-bottom: 100%;">
                                                <img src="@poster.ImageUrl" class="position-absolute w-100 h-100 object-fit-contain" alt="...">
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        </div>
                        <div class="swiper-pagination text-warning"></div>
                    </div>
                    <div thumbsSlider="" class="swiper mySwiper-product-view mt-3 d-none d-md-block">
                        <div class="swiper-wrapper">
                            @{
                                if (Model.PosterImages != null && Model.PosterImages.Count > 0)
                                {
                                    foreach (var poster in Model.PosterImages)
                                    {
                                        <div class="swiper-slide">
                                            <div class="w-100 position-relative" style="padding-bottom: 100%;">
                                                <img src="@poster.ImageUrl" class="position-absolute w-100 h-100 object-fit-contain" alt="...">
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-lg-7 col-12 mt-3 mt-lg-0 fs-7 pt-lg-3">
                    <h4 class="mb-3">@Model.Name</h4>
                    <div class="row row-cols-2 mb-2">
                        <div class="col">Tác giả: <a href="" class="text-decoration-none fw-bold">@Model.Author.Name</a></div>
                        @{
                            if (Model.BookPartners != null && Model.BookPartners.Count > 0)
                            {
                                foreach (var bp in Model.BookPartners)
                                {
                                    <div class="col">@bp.Partner.PartnerType.Name: <a href="" class="text-decoration-none fw-bold">@bp.Partner.Name</a></div>
                                }
                            }
                        }
                        <div class="col">Hình thức bìa: <a href="" class="text-decoration-none fw-bold">@Model.CoverType.TypeName</a></div>
                    </div>
                    <div>
                        @{
                            var averageRating = 0;
                            if (Model.Reviews.Count > 0) averageRating = (int)Math.Round(Model.Reviews.Average(r => r.Rating), 0);
                            
                            for (int i = 1; i <= 5; i++)
                            {
                                if (i <= averageRating)
                                {
                                    <span style="color: gold;">★</span>
                                }
                                else
                                {
                                    <span>★</span>
                                }
                            }
                        }
                        <span>(@Model.Reviews.Count đánh giá)</span>
                    </div>
                    <div class="d-flex align-items-center my-3">
                        <span class="fs-2 fw-bold text-danger">@((Model.Price - Model.Price * Model.DiscountPercentage / 100).ToString("N0")) đ</span>
                        <span class="ms-2 text-decoration-line-through">@Model.Price.ToString("N0") đ</span>
                        <span class="bg-danger text-white px-2 ms-2 fw-bold px-2 py-1 rounded-3">- @Model.DiscountPercentage %</span>
                    </div>
                    <div class="row">
                        <div class="col-3">
                            Chính sách đổi trả
                        </div>
                        <div class="col-9">
                            Đổi trả sản phẩm trong 30 ngày
                            <a href="#" class="text-decoration-none fw-bold">Xem thêm</a>
                        </div>
                    </div>
                    <div class="row my-3 align-items-center">
                        <div class="col-3">
                            Số lượng
                        </div>
                        <div class="col-9">
                            <input type="number" id="order-quantity" value="1" class="fs-5 px-2 py-1 text-center w-25" min="1" max="@Model.Quantity" />
                        </div>
                    </div>
                    <div class="d-flex mt-3">
                        @Html.AntiForgeryToken()
                        <form action="/User/AddCartItem" BookId="@Model.Id" onsubmit="AddCartItem(this, event)">
                            <input type="submit" value="Thêm vào giỏ hàng" class="btn btn-outline-danger fw-bold mx-1 py-2" />
                        </form>
                        <form asp-controller="User" asp-action="BuyNow" id="form-ByNow">
                            <input type="number" id="Quantity" name="Quantity" hidden />
                            <input type="number" name="BookId" value="@Model.Id" hidden />
                            <input type="submit" value="Mua ngay" class="btn btn-danger fw-bold mx-1 py-2" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* voucher *@
    <div class="container mt-4">
        <div class="d-flex align-items-center p-3 rounded-top-3 bg-white">
            <img src="~/image/icon_dealhot_new.png" width="32" height="32" class="object-fit-cover rounded-3" />
            <h5 class="fw-bold mb-0 p-2">Mã giảm giá</h5>
            @{
                var voucherMore = vouchers?.Skip(3).ToList();
                if (voucherMore != null && voucherMore.Count > 0)
                {
                    <span role="button" class="text-primary ms-auto" data-bs-toggle="modal" data-bs-target="#vouchersModal">Xem thêm</span>
                    <div class="modal fade" id="vouchersModal" tabindex="-1" aria-labelledby="vouchersModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                            <div class="modal-content">
                                <div class="modal-header text-danger">
                                    <i class="bi bi-gift-fill fs-3"></i>
                                    <h1 class="modal-title fs-5 text-uppercase ms-3" id="vouchersModalLabel">Mã giảm giá</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @{
                                        foreach (var v in voucherMore)
                                        {
                                            <div class="mb-3">
                                                @(await Html.RenderComponentAsync<VoucherComponent>(RenderMode.ServerPrerendered, new { voucher = v }))
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            
        </div>
        <div class="bg-white p-3 rounded-bottom-3">
            <div class="row row-cols-1 row-cols-lg-3 g-3">
                @{
                    if (vouchers != null && vouchers.Count > 0)
                    {
                        foreach (var v in vouchers.Take(3))
                        {
                            <div class="col">
                                @(await Html.RenderComponentAsync<VoucherComponent>(RenderMode.ServerPrerendered, new { voucher = v }))
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
    @* Product hot *@
    <div class="container mt-4">
        <div class="d-flex align-items-center p-3 rounded-top-3 bg-white">
            <img src="~/image/icon_dealhot_new.png" width="32" height="32" class="object-fit-cover rounded-3" />
            <h5 class="fw-bold mb-0 p-2">Gợi Ý Sản Phẩm</h5>
        </div>
        <div class="bg-white p-3 rounded-bottom-3">
            <!-- Swiper -->
            <div class="swiper mySwiper-hot">
                <div class="swiper-wrapper">
                    @{
                        if (similarBooks != null && similarBooks.Count > 0)
                        {
                            foreach (var book in similarBooks)
                            {
                                <div class="swiper-slide">
                                    <div class="card position-relative">
                                        <a href="~/Home/Product/@book.Id" class="text-decoration-none mx-2" style="color: #000;" title="@book.Name">
                                            <div class="w-100 position-relative" style="padding-bottom: 100%;">
                                                <img src="@book.PosterImages.LastOrDefault()?.ImageUrl" class="card-img-top position-absolute w-100 h-100 object-fit-cover" alt="...">
                                            </div>
                                            <div class="card-body p-1">
                                                <h6 class="card-title twoLine">@book.Name</h6>
                                                <div class="d-flex flex-column justify-content-start">
                                                    <div>
                                                        <span class="card-text text-danger fw-bold">@((book.Price - book.Price * book.DiscountPercentage / 100).ToString("N0")) đ</span>
                                                        <small class="position-absolute top-0 end-0 bg-danger text-white px-2 ms-2 rounded-start">- @book.DiscountPercentage %</small>
                                                    </div>
                                                    <small class="card-text text-decoration-line-through">@book.Price.ToString("N0") đ</small>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
                <div class="swiper-button-next rounded-circle"><i class="bi bi-arrow-right-circle"></i></div>
                <div class="swiper-button-prev rounded-circle"><i class="bi bi-arrow-left-circle"></i></div>
            </div>
        </div>
    </div>
    @* Infomation Product *@
    <div class="container mt-4">
        <div class="p-3 bg-white rounded-3">
            <h5>Thông tin sản phẩm</h5>
            <dl class="row px-4">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Name)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Name)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Id)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Id)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Author)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Author.Name)
                </dd>
                @{
                    if (Model.BookPartners != null && Model.BookPartners.Count > 0)
                    {
                        foreach (var bp in Model.BookPartners)
                        {
                            <dt class="col-sm-3">
                                @bp.Partner.PartnerType.Name
                            </dt>
                            <dd class="col-sm-9">
                                @bp.Partner.Name
                            </dd>
                        }
                    }
                }
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Weight)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Weight)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Dimension)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Dimension.Width) x @Html.DisplayFor(model => model.Dimension.Length) x @Html.DisplayFor(model => model.Dimension.Height) @Html.DisplayFor(model => model.Dimension.Unit)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.PageCount)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.PageCount)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.CoverType)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.CoverType.TypeName)
                </dd>
                <div class="py-2">
                    Giá sản phẩm trên Fahasa.com đã bao gồm thuế theo luật hiện hành. Bên cạnh đó, tuỳ vào loại sản phẩm, hình thức và địa chỉ giao hàng mà có thể phát sinh thêm chi phí khác như Phụ phí đóng gói, phí vận chuyển, phụ phí hàng cồng kềnh,...
                </div>
            </dl>
            <hr />
            <div>
                <div class="collapse" id="collapseDescriptionBook">
                    <div class="textContent">
                        @Model.Description
                    </div>
                </div>
                <div class="d-flex justify-content-center mt-4">
                    <a class="btn btn-outline-danger" onclick="ShowMoreOnclick(this)" data-bs-toggle="collapse" href="#collapseDescriptionBook" role="button" aria-expanded="false" aria-controls="collapseDescriptionBook">
                        Xem thêm
                    </a>
                    <script>
                        function ShowMoreOnclick(element) {
                            var isExpanded = element.getAttribute("aria-expanded");
                            if (isExpanded === "false") {
                                element.textContent = "Xem thêm";
                            } else {
                                element.textContent = "Ẩn bớt";
                            }
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
    @* review *@
    <div class="container mt-4 review">
        <div class="p-3 bg-white rounded-3">
            <h5 class="text-uppercase pb-3">Đánh giá sản phẩm</h5>
            <div class="row">
                <div class="col-9 col-lg-7">
                    <div class="d-flex">
                        <div class="my-auto">
                            <h6 class="text-center">@averageRating/5</h6>
                            <div class="fs-5">
                                @{
                                    for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= averageRating)
                                        {
                                            <span style="color: gold;">★</span>
                                        }
                                        else
                                        {
                                            <span>★</span>
                                        }
                                    }
                                }
                            </div>
                            <div class="text-center">(@Model.Reviews.Count đánh giá)</div>
                        </div>
                        <div class="flex-grow-1 mx-4">
                            @{
                                var totalReviews = Model.Reviews.Count;
                                var ratings = new int[5];

                                foreach (var review in Model.Reviews)
                                {
                                    if (review.Rating >= 1 && review.Rating <= 5)
                                    {
                                        ratings[review.Rating - 1]++;
                                    }
                                }

                                var rate5 = totalReviews > 0 ? Math.Round((ratings[4] * 100.0 / totalReviews), 0) : 0;
                                var rate4 = totalReviews > 0 ? Math.Round((ratings[3] * 100.0 / totalReviews), 0) : 0;
                                var rate3 = totalReviews > 0 ? Math.Round((ratings[2] * 100.0 / totalReviews), 0) : 0;
                                var rate2 = totalReviews > 0 ? Math.Round((ratings[1] * 100.0 / totalReviews), 0) : 0;
                                var rate1 = totalReviews > 0 ? Math.Round((ratings[0] * 100.0 / totalReviews), 0) : 0;
                            }
                            <div class="d-flex align-items-center">
                                <span>5 sao</span>
                                <div style="height: 8px;" class="progress flex-grow-1 mx-3" role="progressbar" aria-label="Danger example" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                                    <div class="progress-bar bg-danger" style="width: @rate5%"></div>
                                </div>
                                <span>@rate5%</span>
                            </div>
                            <div class="d-flex align-items-center">
                                <span>4 sao</span>
                                <div style="height: 8px;" class="progress flex-grow-1 mx-3" role="progressbar" aria-label="Danger example" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                                    <div class="progress-bar bg-danger" style="width: @rate4%"></div>
                                </div>
                                <span>@rate4%</span>
                            </div>
                            <div class="d-flex align-items-center">
                                <span>3 sao</span>
                                <div style="height: 8px;" class="progress flex-grow-1 mx-3" role="progressbar" aria-label="Danger example" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                                    <div class="progress-bar bg-danger" style="width: @rate3%"></div>
                                </div>
                                <span>@rate3%</span>
                            </div>
                            <div class="d-flex align-items-center">
                                <span>2 sao</span>
                                <div style="height: 8px;" class="progress flex-grow-1 mx-3" role="progressbar" aria-label="Danger example" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                                    <div class="progress-bar bg-danger" style="width: @rate2%"></div>
                                </div>
                                <span>@rate2%</span>
                            </div>
                            <div class="d-flex align-items-center">
                                <span>1 sao</span>
                                <div style="height: 8px;" class="progress flex-grow-1 mx-3" role="progressbar" aria-label="Danger example" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                                    <div class="progress-bar bg-danger" style="width: @rate1%"></div>
                                </div>
                                <span>@rate1%</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <ul class="list-group list-group-flush">
                    @{
                        if (reviews != null && reviews.Count > 0)
                        {
                            if(userLogin.CurrentUser != null)
                            {
                                var reviewOfUser = reviews.FirstOrDefault(r => r.User.Id == userLogin.CurrentUser.Id);
                                if (reviewOfUser != null)
                                {
                                    <li class="list-group-item" id="reviewOfUser">
                                        <div class="row">
                                            <div class="col-3 col-xl-2">
                                                <img src="@reviewOfUser.User.ImageUrl" width="50" height="50" class="object-fit-contain rounded-circle me-2" />
                                                <span>@reviewOfUser.User.FullName</span>
                                                <div id="reviewOfUser_rating">
                                                    @{
                                                        for (int i = 1; i <= 5; i++)
                                                        {
                                                            if (i <= reviewOfUser.Rating)
                                                            {
                                                                <span style="color: gold;">★</span>
                                                            }
                                                            else
                                                            {
                                                                <span>★</span>
                                                            }
                                                        }
                                                    }
                                                </div>
                                            </div>
                                            <div class="col">
                                                <span id="reviewOfUser_comment">@reviewOfUser.Comment</span>
                                                <div class="d-flex justify-content-between">
                                                    <small>@reviewOfUser.CreatedAt</small>
                                                    <div class="btn-group" role="group">
                                                        <a href="/User/EditReview" IdValue="@reviewOfUser.Id" onclick="HandlerCRUD(this, event)" data-bs-dismiss="modal" aria-label="Close" class="btn btn-outline-danger"><i class="bi bi-pen"></i></a>
                                                        <a href="/User/DeleteReview" IdValue="@reviewOfUser.Id" onclick="HandlerCRUD(this, event)" data-bs-dismiss="modal" aria-label="Close" class="btn btn-outline-danger"><i class="bi bi-trash3"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                }
                            }
                            foreach (var review in reviews)
                            {
                                <li class="list-group-item">
                                    <div class="row">
                                        <div class="col-3 col-xl-2">
                                            <img src="@review.User.ImageUrl" width="50" height="50" class="object-fit-contain rounded-circle me-2" />
                                            <span>@review.User.FullName</span>
                                            <div>
                                                @{
                                                    for (int i = 1; i <= 5; i++)
                                                    {
                                                        if (i <= review.Rating)
                                                        {
                                                            <span style="color: gold;">★</span>
                                                        }
                                                        else
                                                        {
                                                            <span>★</span>
                                                        }
                                                    }
                                                }
                                            </div>

                                        </div>
                                        <div class="col">
                                            @review.Comment
                                            <div>
                                                <small>@review.CreatedAt</small>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                
                            }
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
    @{
        if (pageFindSimilarBooksBasedOnCart != null && pageFindSimilarBooksBasedOnCart.Items.Count > 0)
        {
            <div class="container mt-4">
                <div class="d-flex align-items-center p-3 rounded-top-3" style="background-color: #FCDDEF;">
                    <img src="~/image/icon_dealhot_new.png" width="32" height="32" class="object-fit-cover rounded-3" />
                    <h5 class="mb-0 p-2">Sản Phẩm Gợi Ý Cho Bạn</h5>
                </div>
                <div class="bg-white p-3 rounded-bottom-3">
                    <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-4 mt-1">
                        @foreach (var book in pageFindSimilarBooksBasedOnCart.Items)
                        {
                            <div>
                                <div class="card mx-2 position-relative overflow-hidden">
                                    <a href="/Home/Product/@book.Id" class="text-decoration-none mx-2" style="color: #000;" title="@book.Name">
                                        <div class="w-100 position-relative" style="padding-bottom: 100%;">
                                            <img src="@book.PosterImages.LastOrDefault()?.ImageUrl" class="card-img-top position-absolute w-100 h-100 object-fit-cover" alt="...">
                                        </div>
                                        <div class="card-body p-1">
                                            <h6 class="card-title twoLine">@book.Name</h6>
                                            <div class="d-flex flex-column justify-content-start">
                                                <div>
                                                    <span class="card-text text-danger fw-bold">@((book.Price - book.Price * book.DiscountPercentage / 100).ToString("N0")) đ</span>
                                                    <small class="position-absolute top-0 end-0 bg-danger text-white px-2 ms-2 rounded-start">- @book.DiscountPercentage %</small>
                                                </div>
                                                <small class="card-text text-decoration-line-through">@book.Price.ToString("N0") đ</small>
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="text-center mt-3">
                        <a href="#" class="btn btn-outline-danger px-5">Xem Thêm</a>
                    </div>
                </div>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var orderQuantityInput = $('#order-quantity');
            var quantityInput = $('#Quantity');

            quantityInput.val(orderQuantityInput.val());

            orderQuantityInput.on('input', function () {
                quantityInput.val(orderQuantityInput.val());
            });
        });
    </script>
    <script>
        // view product
        $(document).ready(function () {
            var swiper = new Swiper(".mySwiper-product-view", {
                loop: true,
                spaceBetween: 10,
                slidesPerView: 5,
            });
            var swiper2 = new Swiper(".mySwiper2-product-view", {
                loop: true,
                thumbs: {
                    swiper: swiper,
                },
                pagination: {
                    el: ".swiper-pagination",
                    type: "fraction",
                },
            });
        });

        // hot
        $(document).ready(function () {
            var swiper = new Swiper(".mySwiper-hot", {
                slidesPerView: 2,
                spaceBetween: 30,
                hashNavigation: true,
                navigation: {
                    nextEl: ".swiper-button-next",
                    prevEl: ".swiper-button-prev",
                },
                breakpoints: {
                    576: {
                        slidesPerView: 3,
                    },
                    768: {
                        slidesPerView: 4,
                    },
                    992: {
                        slidesPerView: 5,
                    },
                },
            });
        });
    </script>
}



