@using FahasaStoreClientApp.Components
@model FahasaStoreClientApp.Models.CustomModels.PaginatedResponse<FahasaStoreClientApp.Models.DTO.OrderDTO>
@{
    var orders = Model.Items;
}

<div class="bg-black bg-opacity-10">
    <div class="container pt-4">
        <div class="bg-white rounded-3 py-3">
            <div class="row">
                <div class="col-lg-3">
                    @(await Html.RenderComponentAsync<SideBarUser>(RenderMode.ServerPrerendered, new { active = 3 }))
                </div>
                <div class="col-lg-9 px-4">
                    <h5 class="text-uppercase">Đơn hàng của tôi</h5><hr />
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-1"><strong>#</strong></div>
                            <div class="col-2"><strong>Ngày</strong></div>
                            <div class="col-3"><strong>Người Nhận</strong></div>
                            <div class="col-3"><strong>Thành Tiền</strong></div>
                            <div class="col-2"><strong>Trạng Thái</strong></div>
                            <div class="col-1"></div>
                        </div>
                        @{
                            int index = 0;
                            if (orders.Count > 0)
                            {
                                foreach (var order in orders)
                                {
                                    index = index + 1;
                                    <div class="row my-3">
                                        <div class="col-1">@index</div>
                                        <div class="col-2">@((order.CreatedAt != null) ? order.CreatedAt.Value.ToString("dd/MM/yyyy") : "Không có ngày tạo")</div>
                                        <div class="col-3">@order.Address.ReceiverName</div>
                                        <div class="col-3">@order.OrderItems.Sum(e => (e.Book.Price - e.Book.Price * e.Book.DiscountPercentage / 100) * e.Quantity).ToString("N0") đ</div>
                                        <div class="col-2">@order.OrderStatuses.LastOrDefault()?.Status.Name</div>
                                        <div class="col-1"><a href="/User/OrderDetail" IdValue="@order.Id" onclick="HandlerCRUD(this, event)" class="nav-link">Xem</a></div>
                                    </div>
                                }
                            }
                        }
                    </div>
                    @if(Model.PageCount > 1)
                    {
                        <nav>
                            <ul class="pagination justify-content-end mb-0">
                                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Orders", new { page = 1 })">First</a>
                                </li>
                                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Orders", new { page = Model.PageNumber - 1 })">Previous</a>
                                </li>

                                @for (int i = Model.StartPage; i <= Model.EndPage; i++)
                                {
                                    <li class="page-item">
                                        <a class="page-link @(Model.PageNumber == i ? "active" : "")" href="@Url.Action("Orders", new { page = i })">@i</a>
                                    </li>
                                }

                                <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Orders", new { page = Model.PageNumber + 1 })">Next</a>
                                </li>
                                <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Orders", new { page = Model.PageCount })">Last</a>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
            </div>
        </div>
    </div>
</div>